cmake_minimum_required(VERSION 3.4)
project(TitanEngineScript VERSION 0.1.0)

include("cmake/CPM.cmake")
#include("cmake/googletest.cmake")
include("cmake/cxxopts.cmake")
include("cmake/TitanEngine.cmake")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
add_compile_options("$<$<C_COMPILER_ID:MSVC>:/utf-8>")
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")


# library
file(GLOB titanscript_SOURCE "${CMAKE_CURRENT_LIST_DIR}/lib/*.cpp")
add_library(titanscript)
target_sources(titanscript PRIVATE ${titanscript_SOURCE})
target_link_libraries(titanscript PUBLIC TitanEngine)
target_link_libraries(titanscript PUBLIC cxxopts)
target_include_directories(titanscript INTERFACE "${CMAKE_CURRENT_LIST_DIR}/lib")

# command
MACRO(SUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
      LIST(APPEND dirlist ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO()
SUBDIRLIST(COMMAND_DIR_LIST "${CMAKE_CURRENT_LIST_DIR}/src")
foreach (COMMAND_DIR ${COMMAND_DIR_LIST})
    message("-- add command ${COMMAND_DIR}")
    file(GLOB COMMAND_FILES_CPP "${CMAKE_CURRENT_LIST_DIR}/src/${COMMAND_DIR}/*.cpp")
    file(GLOB COMMAND_FILES     "${CMAKE_CURRENT_LIST_DIR}/src/${COMMAND_DIR}/*.c")
    LIST(APPEND COMMAND_FILES ${COMMAND_FILES_CPP})
    add_executable(${COMMAND_DIR})
    target_sources(${COMMAND_DIR} PRIVATE ${COMMAND_FILES})
    target_link_libraries(${COMMAND_DIR} PRIVATE titanscript)
    set_target_properties(${COMMAND_DIR} PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
    )
    CopyTitanEngineDLL(${COMMAND_DIR})
endforeach()

# testing
#enable_testing()
#include(GoogleTest)
#file(GLOB TEST_FILES_CPP "${CMAKE_CURRENT_LIST_DIR}/test/*.cpp")
#file(GLOB TEST_FILES_CX  "${CMAKE_CURRENT_LIST_DIR}/test/*.cx")
#file(GLOB TEST_FILES     "${CMAKE_CURRENT_LIST_DIR}/test/*.c")
#list(APPEND TEST_FILES ${TEST_FILES_CPP} ${TEST_FILES_CX})
#foreach (test_file IN LISTS TEST_FILES)
#    get_filename_component(filenamewe ${test_file} NAME_WE)
#    string(CONCAT execname "test_" ${filenamewe})
#    add_executable(${execname} ${test_file})
#    set_property(TARGET ${execname} PROPERTY CXX_STANDARD 17)
#    target_link_libraries(${execname} gtest_main)
#    target_link_libraries(${execname} titanscript)
#    CopyTitanEngineDLL(${execname})
#    gtest_discover_tests(${execname})
#endforeach()
